CHANGES
=======

* Remove matrix/inc
* Update dependency sphinx to v2.3.1
* Update dependency pytype to v2019.12.17
* Update faucet/test-base Docker tag to v7
* Authenticate to pypi with API token instead of user/pass

0.0.21
------

* Upgrade to eventlet v0.25.1
* Revert "Refactor Chewie for Better SoC"
* Update dependency pytype to v2019.12.6
* Update dependency sphinx to v2.2.2
* Use Ubuntu 18.04 on travis for running tests

0.0.20
------

* Fix Pylint
* Smoke tests for chewie.clients
* Add Basic Smoke Test for Managed Port
* Add ManagedPort to group port-related data
* Add Start / Stop Identity Requests Methods
* Rename Send Identity Function to better reflect Usage
* Rename all internal methods for Chewie.py to start with Underscore
* Fix Stickler-Ci Linting Config Issues
* Update dependency sphinx to v2.2.1
* Update dependency pytype to v2019.10.17
* Update faucet/test-base Docker tag to v6
* Update dependency pytype to v2019.9.17
* Update dependency pytype to v2019.9.6
* Update docker-compose.yml
* Update dockers
* Removed unused docker images
* Update dependency pytype to v2019.8.29
* Update dependency sphinx to v2.2.0

0.0.19
------

* Fixing up Lint issues
* Fix bash errors
* Clean State Machine Graphs
* Inverse the logic in run\_tests.sh
* Ignore W1618
* Require python3 for chewie
* Clean up some leftover code climate cruft
* Remove unused environment variables
* Add .stickler.yml
* Move Docker Pull into Integration Stage in .travis
* Remove CodeClimate from Chewie
* Split Travis Functions into Stages
* Remove outdated developer documentation
* Whitespace tidy
* Update dependency pytype to v2019.8.9
* Lock to known good version of eventlet
* Update dockerfile for chewie to use faucet/python3
* Allow Multiple Authentication Attempts on MAB Ports
* Add .pylintrc for Explicit Linting Options for Evenlet.Green.Socket
* Rename IPActivity to MAB
* BUGFIX: Remove Port State Machines on Port Down Event
* Add Logging to Socket Setup
* Refactor Sockets to Remove Redundant Code
* fixed dependency to array
* Update dependency pytype to v2019.7.30
* Add Graphs to State Machines
* Add Integration Tests
* Move Unit Test to test/unit directory
* Refactor Test Run Script
* Update dependency pytype to v2019
* In python3 exceptions no longer have .message
* Remove EAP Message Assumption for Concat Radius Datatype
* Add Michael Washer to AUTHORS file
* If we don't specify an explict version PBR will calculate from git tags
* Add Readme to Docs
* Refactor Attribute Type
* Add Configuration for ReadTheDocs

0.0.18
------

* Update API Interface to use \*\*kwarg
* Configure .renovaterc.json
* Add renovate.json
* Preversion 0.0.18

0.0.17
------

* BUGFIX: Fix EAP Response to Preemptive Requests from Chewie
* Speed up deploy stage

0.0.16
------

* Switch to using travis build stages
* Preversion 0.0.17
* Add Tests for MAB Functionality
* Add MAB Functionality to Chewie and Clean up State Machines SoC
* BUGFIX - Fix Chewie Pytest Red Build Issues
* use a different timeout for radius resedning
* Preversion 0.0.16

0.0.15
------

* possible fix for aaa\_identity == None, if receiving chewie initiated reply

0.0.14
------

* add interface for filterid
* add vlan name to auth handler
* send vlan name to faucet on logon
* Preversion 0.0.15
* 0 is an allowed id
* remove exception logger (faucet will now crash and log)
* change log levels
* check next timerid request job is added to queue. Continously send id requests after port up if no one 'active' on port
* fix unit test for port status
* skip broken test
* signature had changed
* change reauth period to use session timeout value
* periodic reauth (currently 40 seconds). should probably increase
* send (delayed by 20 seconds) identity request on port up
* add tunnel, filter, nas ip radius attributes
* id request
* send preemptive identity request on port up
* add port id to state machine logger prefix
* preversion v.0.0.14

0.0.13
------

* Remove unwanted dependencies from Dockerfile.test
* Automatically lookup ubuntu/debian releases for CI package push
* add hexlify
* handle validate authenticator case for both request and response radius messages
* check message\_authenticator and response\_authenticator if possible
* Fix tests using wrong message type. Which uncovered bug where attempting to parse packet which should be discarded
* Fix error where RADIUS State attribute was incorrectly returned when authentication process is restarted during another
* change formatter to support ports numbered up to 65535
* Port-Up State to Ignore Previous Requests
* missing commas. and version 0.0.13
* use PBR

0.0.12
------

* Release chewie v0.0.12
* Update debian package dependencies

0.0.11
------

* pylint
* increase eventlet.sleep to 1
* pytype ignore invalid name on process() created by transitions
* add transitions to install\_requires
* use pytransitions for state machine
* Release chewie v0.0.11
* use snake case for rfc variables/functions
* ignore 'from collections import ...' error with pytype
* remove debug print
* change tuple from eap/radius output queue to a namedtuple
* allow transition from timeout\_failure(2) by providing identity response
* Add information to the README.md
* Add Dockerfile.test for running tests locally
* Add PEAP Functionality to Chewie
* remove empty test\_fuzzer\_finds.py
* fix MessageParseError exception constructor inputs
* test against MessageParser.one\_x\_parse() instead of eap\_parse()
* pylint
* remove unused imports
* Add dictionary that always returns None
* fuzz radius
* eap fuzzer working
* add dockerfile for fuzzing
* Initial message parser (eap/radius) fuzzing

0.0.10
------

* Release chewie v0.0.10
* fix a bug where client could not authenticate after the state machine enters timeout failure
* use \_\_cause\_\_ instead of original\_error parameter
* cahnge last struct.unpack exceptions
* convert a struct.error to MessageParseError
* more raise MessageParseError when radius parsing fails
* Add 'Raises' to docstring
* remove \_\_str\_\_ override from MessageParseError
* raise MessageParseError when radius parsing fails
* raise MessageParseError when parsing fails
* Use put\_nowait() instead of put()
* 4 main chewie methods tested with mocks
* leaving with broken test until we factor out the radius code
* Rework mocks, two methods tested now
* first test functional
* first steps
* pylint
* Create RadiusLifecycle object and move some logic into it
* change urandom patch as os no longer in Chewie
* pylint
* Create RadiusLifecycle object and move some logic into it
* pylint
* Use join() on concat chunks. refractor test to only test concat type
* simplify concat packing
* Add build\_docs functionality
* Fix error when concat datatypes have length dividable by 253 == 0
* Remove exception catch-alls
* add michael baird to authors file
* add variations for testing radius\_pack
* pylint: Wrong continued indentation (remove 4 spaces)
* Replace netils.build\_byte\_string() with bytes.fromhex() (issue #73)
* Add NAS-Identifier and NAS-port radius attribute to access-request
* Remove Threads from chewie test
* Remove unnecessary sleeps from chewie tests
* ignore test profiling
* Add comments for where we need better test coverage
* redo timer scheduler to remove sleep()
* pylint
* Pytype fix
* Factor out Radius socket code
* Factor out EAP socket code
* don't reuse variable names in a method
* rename sm to state\_machine
* Update mocks
* Remove get\_interface\_address method
* fix python3.4 hex error. & pylint
* Add EAP-TLS. Refractored so TTLS & TLS extend from base classes (\*Message & EAP\*)
* got hostapd working with 802.1X - useful for debugging. Got dockerfile.hostapd from bairdo/gasket (already compiled in wired)
* add config files for freeradius EAP-TLS

0.0.9
-----

* Version bump
* Revert "refractor radius attributes. Add more attributes that have the datatyâ€¦"
* python 3.4 no hex()
* refractor radius attributes. Add more attributes that have the datatype already implemented
* clean up access to statemachine dict
* Add tests for some invalid packets
* fix rebase on master
* add logoff/failure/port status tests
* get Chewie thread to stop at some point
* pylint
* continue looping if exception is raised
* mocked socket operations
* WIP save. trying to mock socket operations in chewie.py
* remove commented code
* allow session-timeout to be set from radius. Refractor a little so can set other sm variables from radius (e.g. vlan/acl/filterid)
* Refractor sm tests to check handler counters after each packet. Test for session timeout being cancelled
* Add TimerJob class - can be cancelled. session timeout events can be cancelled
* Revert "remove unneeded code"
* Revert "remove unneeded code"
* add session timeout (expiry)
* add tearDown check for the 'This should never happen bug'
* fix discard test flakyness
* pylint
* pylint
* trigger travis build
* pylint
* more tests
* index by str not MacAddress
* state machine is tied to a PORT and src\_mac. should cover case where two identical macs are on the network
* add some tests for chewie.py
* move timer scheduler to class
* add check handler only called x times in sm tests
* remove preemptive id request. add attempt to test new timer
* Make MacAddress.from\_string() more defensive
* preemptively send identity request on port up. 'fix' (roll your own) timer\_scheduler for timerout based executions
* fix loop
* reset lower layer variables
* add port status interfaces
* state machine is tied to a PORT and src\_mac. should cover case where two identical macs are on the network
* remove unneeded code
* fix shared secret for docker-compose

0.0.8
-----

* making mocking life easier
* Preversion 0.0.8

0.0.7
-----

* Fix faucet ref
* Ensure chewie pip package can be built
* Raise pylint to 8.0
* Raise pylint to 7.0. More docstrings. Ignore line length in tests where each byte string corespnds to a single attribute
* pylint score 6.0. mainly documentation
* Use get\_nowait() instead of accessing queue internals
* print what doing
* stole pylint score check scripts from faucet
* add \_\_init\_\_.py
* pylint
* detect travis python version
* fix import
* ignore wrong-arg-types on splat list
* install
* pytype?
* pytype?
* merge
* Disable pytype
* Run pytype
* Revert "Revert "fix logging with faucet""
* Revert "Revert "add tests, and fix standalone chewie.\_\_init\_\_ signature change""
* python3.4 does not support bytes.hex()
* attempt 2 to fix python3.4 import error
* attempt to fix python3.4 import error
* Improve .gitlab-ci.yml
* Add 3.[45] back to build matrix
* Revert "0.0.8 and add python3.[45] to CI."
* 0.0.8 and add python3.[45] to CI
* Chewie 0.0.7
* Revert "fix logging with faucet"
* Revert "add tests, and fix standalone chewie.\_\_init\_\_ signature change"
* Revert "Debian/jessie compat for python3.4"

0.0.6
-----

* Debian/jessie compat for python3.4
* logging import not required
* config options for radius server ip/port/secret & chewie id
* add tests, and fix standalone chewie.\_\_init\_\_ signature change
* fix logging with faucet
* Add back cc-test-reporter
* Pre-version 0.0.6

0.0.5
-----

* Correct setup.py for release

0.0.4
-----

* Disable cc-test-reporter which breaks deploy

0.0.3
-----

* forgot to update tests
* Give dest 'mac address' to faucet for what port packet came from
* Revert "Revert "Use the auth\_handler on eap-success. Also fixes an error with logoff.""
* check currentId is not none. (may be 0)
* Revert "Use the auth\_handler on eap-success. Also fixes an error with logoff."
* credentials no longer needed
* removed unused files timer and old statemachine. Lint
* add failure/loggoff handlers
* add auth\_handler to state machine tests
* Use the auth\_handler on eap-success. Also fixes an error with logoff
* support logoff messages
* forgot to change this from last interface change
* cleanup radius datatypes api, only keep bytes version & parse out to non bytes as required
* remove unused function
* pylint. refractor - extract out methods
* pylint, add docstring to some methods
* Fix bug where multiple concat messages of different type
* remove unneeded print
* Calculate radius response authenticator. Fix bug not sending radius attributes. Removed unneeded branches from message parser
* added some method documentation. Added variables to calculate timeout signature
* Add event for port status changes. Fix duplicate entering of disbled state. Removed completed todos
* Remove hardcoded radius attributes from message parser, into chewie.py
* explictly test two different packet corruptions
* Tried to clean up interface to radius datatypes
* tweak default timeout value for tests
* Adds a timer to handle retransmitting/timeout\_failures of packets not responded to. Cleans up some logging
* Use more appropriate service type value as default
* Add debian packaging
* State machine only uses \*\*\*Message (e.g. IdentityMessage) as input/ouput
* Automatically deploy pypi packages for beka
* chewie has been adopted by the faucet foundation
* renamed some tests. added unit tests for success2, failure2, discard(2) state machine states. added unit tests for partial ttls
* refractor duplicate methods. Add check statemachine in correct state
* parse packet outside of statemachine
* Chewie can authenticate user via RADIUS Server with MD5 or TTLS
* Validate a packet via Message-Authenticator and authententicator
* Fix bug where length is ont calculated correctly for concat types that need to be split up. change \_\_len\_\_ and length methods to meaningful names
* Refractored out datatype length checking to DataType - checks length is between the min/max
* refractor - split methods into several parts
* handle case where MessageAuthenticator cannot be found in attributes list
* refractor out datatypes that are already known by the class
* Allow MessageAuthenticator to hash the whole packet with .build()
* Parsing and packing of RADIUS Packets
* add freeradius docker container and minimal amount of config files to be used during dev
* Revert "install packages at container start"
* install packages at container start
* use volume instead of installing chewie in dockerfile
* Removed hostapd from docker-compose. Use volumes instead of copy
* removed unneeded pip installs (will be installed via the requirements.txt file)
* removed create/deploy files (now uses docker-copmose)
* Use docker-compose
* Add codeclimate
* Add travis

0.0.2
-----

* Bump to 0.0.2
* Ready to integrate into Faucet
* Group address stored correctly
* Cleared chaff, auth callback
* Choose which address you respond to at Chewie level
* WIP start working towards NFV mode

0.0.1
-----

* Get ready for pypi
* wpa\_supplicant can now auth and state machine does its thing
* test failed auth too
* state machine happy path should work
* Success and failure messages should work
* Add eapol start packet, slow start on state machine
* Formatting, start on Timer and StateMachine
* Redid Chewie using MessagePacker/MessageParser
* Made Message classes
* Rename to chewie
* Build out Chewy a bit
* wpa\_supplicant can auth against us
* Progress on testbed
